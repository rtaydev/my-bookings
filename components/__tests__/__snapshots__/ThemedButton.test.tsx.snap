// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThemedButton applies custom styles 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "borderRadius": 30,
        "justifyContent": "center",
        "padding": 10,
      },
      {
        "backgroundColor": "#003083",
      },
      {
        "opacity": 1,
      },
      {
        "padding": 20,
      },
      false,
      {
        "alignSelf": "flex-start",
      },
    ]
  }
  testID="themed-button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 16,
          },
          {
            "color": "#fff",
          },
          undefined,
        ]
      }
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`ThemedButton matches the snapshot 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "borderRadius": 30,
        "justifyContent": "center",
        "padding": 10,
      },
      {
        "backgroundColor": "#003083",
      },
      {
        "opacity": 1,
      },
      undefined,
      false,
      {
        "alignSelf": "flex-start",
      },
    ]
  }
  testID="snapshot-button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 16,
          },
          {
            "color": "#fff",
          },
          undefined,
        ]
      }
    >
      Snapshot Button
    </Text>
  </View>
</View>
`;

exports[`ThemedButton passes other props to Pressable 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "borderRadius": 30,
        "justifyContent": "center",
        "padding": 10,
      },
      {
        "backgroundColor": "#003083",
      },
      {
        "opacity": 1,
      },
      undefined,
      false,
      {
        "alignSelf": "flex-start",
      },
    ]
  }
  testID="themed-button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 16,
          },
          {
            "color": "#fff",
          },
          undefined,
        ]
      }
    >
      Test Button
    </Text>
  </View>
</View>
`;

exports[`ThemedButton renders correctly with theme 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "borderRadius": 30,
        "justifyContent": "center",
        "padding": 10,
      },
      {
        "backgroundColor": "#003083",
      },
      {
        "opacity": 1,
      },
      undefined,
      false,
      {
        "alignSelf": "flex-start",
      },
    ]
  }
  testID="themed-button"
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 16,
          },
          {
            "color": "#fff",
          },
          undefined,
        ]
      }
    >
      Test Button
    </Text>
  </View>
</View>
`;
